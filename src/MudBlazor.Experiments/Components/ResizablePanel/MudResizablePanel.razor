@namespace MudBlazor.Experiments

<div class="@(Class) relative d-flex @(IsVertical ? "flex-column" : "flex-row") flex-grow-1" style="@Style">

	<div style="width: 100%; flex: @(DragWidth)">
		@Panel1
	</div>

	<div style="width: 100%; flex: @(100 - DragWidth)">
		@Panel2
	</div>

	<div style="width: 100%; height: 100%; position: absolute;">
		<input @bind-value="@DragWidth" @bind-value:event="oninput" class="@(IsVertical ? "mud-resizable-panel-slider-vertical" : "mud-resizable-panel-slider-horizontal") mud-resizable-panel-slider" style="width: 100%; height: 100%" type="range" min="0" max="100">
	</div>

</div>

@code {

	[Parameter]
	[EditorRequired]
	public RenderFragment Panel1 { get; set; } = null!;

	[Parameter]
	[EditorRequired]
	public RenderFragment Panel2 { get; set; } = null!;

	[Parameter]
	public string Class { get; set; } = "";

	[Parameter]
	public string Style { get; set; } = "";

	[Parameter]
	public bool IsVertical { get; set; } = false;

	[Parameter]
	public int InitialPanel1PercentageSize { get; set; } = 50;

	private int DragWidth;

	protected override void OnInitialized()
	{
		base.OnInitialized();

		DragWidth = InitialPanel1PercentageSize;
	}
}
